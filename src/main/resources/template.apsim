<folder version="29" name="simulations">
    <folder name="Soils">
#foreach ($soil in $collection.soils)
        <soil name="$soil.id">
            <Comment type="multiedit" description="Comments">ICASA Classification: $soil.classification</Comment>
            <ASC_Order description="Australian Soil Classification Order" />
            <ASC_Sub-order description="Australian Soil Classification Sub-Order" />
            <SoilType description="Soil description"/>
            <LocalName/>
            <Site>$soil.site</Site>
            <NearestTown description="Nearest town"/>
            <Region/>
            <State />
            <Country />
            <NaturalVegetation description="Natural vegetation"/>
            <ApsoilNumber description="Apsoil number" />
            <Latitude description="Latitude (WGS84)">$soil.latitude</Latitude>
            <Longitude>$soil.longitude</Longitude>
            <LocationAccuracy description="Location accuracy" />
            <DataSource type="multiedit" description="Data source">$soil.source</DataSource>
            <Comments />
            <Water>
#foreach ($layer in $soil.layers)
                <Layer>
                    <Thickness units="mm">$layer.thickness</Thickness>
                    <KS units="mm/day" />
                    <BD units="g/cc">$layer.bulkDensity</BD>
                    <AirDry units="mm/mm">$layer.airDry</AirDry>
                    <LL15 units="mm/mm">$layer.lowerLimit</LL15>
                    <DUL units="mm/mm">$layer.drainedUpperLimit</DUL>
                    <SAT units="mm/mm">$layer.saturation</SAT>
                </Layer>
#end
                <SoilCrop name="$soil.cropName">
#foreach ($layer in $soil.layers)          
                    <Layer>
                        <Thickness units="mm">$layer.thickness</Thickness>
                        <LL units="mm/mm">$layer.lowerLimit</LL>
                        <KL units="/day">$layer.kl</KL>
                        <XF units="0-1">1</XF>
                    </Layer>
#end
                </SoilCrop>
            </Water>
            <SoilWat>
                <SummerCona>3.5</SummerCona>
                <SummerU>$soil.u</SummerU>
                <SummerDate>1-Nov</SummerDate>
                <WinterCona>3.5</WinterCona>
                <WinterU>$soil.u</WinterU>
                <WinterDate>1-Apr</WinterDate>
                <DiffusConst>$soil.getDiffusConst()</DiffusConst>
                <DiffusSlope>$soil.getDiffusSlope()</DiffusSlope>
                <Salb>$soil.salb</Salb>
                <Cn2Bare>$soil.cn2bare</Cn2Bare>
                <CnRed>20</CnRed>
                <CnCov>0.8</CnCov>
                <Slope>
                </Slope>
                <DischargeWidth>
                </DischargeWidth>
                <CatchmentArea>
                </CatchmentArea>
                <MaxPond>
                </MaxPond>
#foreach ($layer in $soil.layers)             
                <Layer>
                    <Thickness units="mm">$layer.thickness</Thickness>
                    <SWCON units="0-1">$soil.swcon</SWCON>
                    <MWCON units="0-1" />
                    <KLAT units="mm/d" />
                </Layer>
#end
            </SoilWat>
            <SoilOrganicMatter>
                <RootCn>45</RootCn>  
                <RootWt>500</RootWt>  
                <SoilCn>14.5</SoilCn> 
                <EnrACoeff>7.4</EnrACoeff>
                <EnrBCoeff>0.2</EnrBCoeff>
#foreach ($layer in $soil.layers)        
                <Layer>                                            
                    <Thickness units="mm">$layer.thickness</Thickness>                                                
                    <OC units="Total %">#if( $layer.organicCarbon == 0 ) 0.1 #else $layer.organicCarbon #end</OC>
                    <FBiom units="0-1">$layer.fbiom</FBiom>
                    <FInert units="0-1">$layer.finert</FInert>
                </Layer>
#end
            </SoilOrganicMatter>
            <Analysis>
#foreach ($layer in $soil.layers)        
                <Layer>
                    <Thickness units="mm">$layer.thickness</Thickness>
                    <Rocks units="%" />
                    <Texture/>
                    <MunsellColour/>
                    <EC units="1:5 dS/m"/>
                    <PH units="1:5 water">$layer.ph</PH>
                    <CL units="mg/kg" />
                    <Boron units="Hot water mg/kg" />
                    <CEC units="cmol+/kg" />
                    <Ca units="cmol+/kg" />
                    <Mg units="cmol+/kg" />
                    <Na units="cmol+/kg" />
                    <K units="cmol+/kg" />
                    <ESP units="%" />
                    <Mn units="mg/kg" />
                    <Al units="cmol+/kg" />
                    <ParticleSizeSand units="%" />
                    <ParticleSizeSilt units="%" />
                    <ParticleSizeClay units="%" />
                </Layer>
#end
            </Analysis>           
        </soil>    
#end
    </folder>

   #foreach ($simulation in $collection.experiments)
	<simulation name="${simulation.getUniqueName()}">
		<memo name="LOG">
This .apsim file was created by the APSIM AgMIP translator.
Log messages:
$simulation.log   
		</memo>
		<clock>
			<start_date type="date" description="Enter the start date of the simulation">$simulation.startDate</start_date>
			<end_date type="date" description="Enter the end date of the simulation">$simulation.endDate</end_date>
		</clock>
		<metfile name="met">
			<filename name="filename" input="yes">${simulation.weather.name}.met</filename>
		</metfile>
		<summaryfile />
		<area name="paddock">
			<soil name="Soil" shortcut="/simulations/Soils/$simulation.soil.id">
                <Water shortcut="/simulations/Soils/$simulation.soil.id/Water" />
                <SoilWater shortcut="/simulations/Soils/$simulation.soil.id/SoilWater" />
                <SoilOrganicMatter shortcut="/simulations/Soils/$simulation.soil.id/SoilOrganicMatter" />
                <Analysis shortcut="/simulations/Soils/$simulation.soil.id/Analysis" />
				<Sample name="Initial nitrogen">
					<Date type="date" description="Sample date:">$simulation.initialCondition.date</Date>
#foreach ($initialLayer in $simulation.initialCondition.soilLayers)        
					<Layer>
						<Thickness units="mm">$initialLayer.thickness</Thickness>
						<NO3 units="ppm">$initialLayer.no3</NO3>
						<NH4 units="ppm">$initialLayer.nh4</NH4>
					</Layer>
#end          
				</Sample>
				<Sample name="Initial water">
					<Date type="date" description="Sample date:">$simulation.initialCondition.date</Date>
#foreach ($initialLayer in $simulation.initialCondition.soilLayers)        
					<Layer>
						<Thickness units="mm">$initialLayer.thickness</Thickness>
						<SW units="mm/mm">$initialLayer.soilWater</SW>
					</Layer>
#end          
				</Sample>            
			</soil>
			<surfaceom name="SurfaceOrganicMatter">
				<PoolName type="text" description="Organic Matter pool name">OrganicMatter</PoolName>
				<type type="list" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat" description="Organic Matter type">$simulation.initialCondition.getResidueType()</type>
				<mass type="text" description="Initial surface residue (kg/ha)">$simulation.initialCondition.residueWeight</mass>
				<cnr type="text" description="C:N ratio of initial residue">$simulation.initialCondition.cnr</cnr>
				<standing_fraction type="text" description="Fraction of residue standing">0</standing_fraction>
			</surfaceom>
			<fertiliser />
			<irrigation name="Irrigation">
				<automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">off</automatic_irrigation>
				<asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
				<crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.5</crit_fr_asw>
				<irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
				<irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
				<allocation type="text" description="Allocation in mm">0</allocation>
				<default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
				<default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
				<default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
			</irrigation>
			<$simulation.management.plantingCropName()>
            <ini>
               <filename>${simulation.management.plantingCropName()}.xml</filename>
            </ini>
         </$simulation.management.plantingCropName()>
			<folder name="Manager folder">
				<operations name="Operations">
#foreach ($event in $simulation.management.events)        
#if( $event.apsimAction )
					<operation condition="start_of_day">
						<date>$event.date</date>
						<action>$event.apsimAction</action>
					</operation>
#end               
#end        
				</operations>
#if ($simulation.management.plantingCropName() == "sugar")
                <manager name="SUGAR management">
                    <ui>
                        <category description="Ratoon management parameters" type="category" />
                        <NoRatoons type="text" description="Number of ratoons (max = 5): ">4</NoRatoons>
                        <ratoonlen type="text" description="Duration of a ratoon crop (days) (30 days/month * 13 months) : ">390</ratoonlen>
                        <ratoon_stalks type="text" description="Stalk density of ratoon crop (/m2) :">10</ratoon_stalks>
                    </ui>
                    <script name="start_of_day">
                    <text><![CDATA[
                    ! -----------------------------------------------------------------
                    ! Book keeping to round days to integer values
                    plantlen = nearest_int(plantlen)
                    ratoonlen = nearest_int(ratoonlen)

                    if (sugar.crop_status = 'alive') then

                       ! Set harvest dates for each crop phase
                       if (sugar.DaysAfterSowing = [plantlen] and ratoon_no = 0) or
                          (sugar.DaysAfterSowing = [ratoonlen] and ratoon_no > 0) then

                          sugar harvest

                          if (ratoon_no = [NoRatoons] + 1) then
                             ! plough the crop out
                             sugar kill_crop
                             sugar end_crop

                          else
                             ! Set stalk density
                             sugar.plants = [ratoon_stalks]
                          endif
                       else
                          ! We have not reached the harvest date for this ratoon.
                       endif

                    elseif (sugar.crop_status = 'dead') then
                       sugar harvest
                       sugar end_crop

                    endif
                       ]]></text>
                    <event>start_of_day</event>
                    </script>
                    <script name="init">
                    <text>
                    plantlen = 0
                    ratoonlen = 0
                    </text>
                    <event>init</event>
                    </script>
                </manager>
#else        
                <manager name="Harvesting rule">
                    <ui>
                        <category type="category" description="Harvesting criteria" />
                        <crop type="crop" description="Enter name of crop to harvest when ripe : ">$simulation.management.plantingCropName()</crop>
                    </ui>
                    <script><text>if [crop].StageName = 'harvest_ripe'  or [crop].plant_status = 'dead' then
   [crop] harvest
   [crop] end_crop
endif
</text><event>end_of_day</event></script>
                </manager>
#end
			</folder>
			<outputfile>
				<filename output="yes">AgMIP.out</filename>
				<title>AgMIP</title>
				<variables name="Variables">
					<variable name="dd/mm/yyyy as Date"></variable>
					<variable name="biomass"></variable>
					<variable name="yield"></variable>
					<variable name="esw"></variable>
					<variable name="lai"></variable>		  
				</variables>
				<events name="Reporting Frequency">
					<event name="daily"></event>
				</events>
				<Graph name="Yield and Biomass">
					<Legend>
						<CheckedTitles> biomass</CheckedTitles>
						<CheckedTitles> yield</CheckedTitles>
					</Legend>
					<Plot>
						<SeriesType>Solid line</SeriesType>
						<PointType>Circle</PointType>
						<colour/>
						<X>Date</X><Y>biomass</Y><Y>yield</Y>
						<YRight>lai</YRight>
						<GDApsimFileReader name="ApsimFileReader" />
					</Plot>
				</Graph>		
			</outputfile>
         <outputfile name="ACMO">
            <filename output="yes">MACH0001_1__1 ACMO.out</filename>
            <title>MACH0001_1__1 ACMO</title>
            <variables name="Variables">
               <variable name="yield" />
               <variable name="biomass" />
               <variable name="AnthesisDate format yyyy-mm-dd" />
               <variable name="MaturityDate format yyyy-mm-dd" />
               <variable name="Today as HarvestDate format yyyy-mm-dd" />
               <variable name="LAIMax" />
               <variable name="InCropRain" />
               <variable name="SumEP" />
               <variable name="SumNO3Uptake" />
               <variable name="SumLeachNO3" />
               <constants>
                  <constant name="format">csv</constant>
               </constants>
            </variables>
            <events name="Reporting Frequency">
               <event name="harvesting" />
            </events>
         </outputfile>
         <manager2 name="ACMOVariables">
            <text>
using System;
using ModelFramework;
using CSGeneral;

public class Script 
{      
   [Link] Paddock MyPaddock; 
   [Input] DateTime Today;
   
   [Input] double LAI;
   [Input] double Rain;
   [Input] double ep;
   [Input] double[] flow_no3;
   [Output] DateTime AnthesisDate;
   [Output] DateTime MaturityDate;
   [Output] double LAIMax = 0;
   [Output] double InCropRain = 0;
   [Output] double SumEP = 0;
   [Output] double SumNO3Uptake = 0;
   [Output] double SumLeachNO3 = 0;
   
   // The following event handler will be called each time a crop is sown.
   [EventHandler] public void OnSowing()
   {
      LAIMax = 0.0;
      InCropRain = 0.0;
      SumEP = 0.0;
      SumNO3Uptake = 0;
      SumLeachNO3 = 0;
   }   
      
   // The following event handler will be called each day at the beginning of the day
   [EventHandler] public void OnPost()
   {
      // Work out flowering and maturity dates.
      string StageName;
      MyPaddock.Get("StageName", out StageName);
      if (StageName.ToLower() == "flowering") AnthesisDate = Today;
      if (StageName.ToLower() == "maturity") MaturityDate = Today;      
      
      // Get no3_uptake for whole profile (as a positive number)
      double no3_uptake;
#if ($simulation.management.plantingCropName() == "maize")
      double[] no3_uptake_array;
      MyPaddock.Get("no3_uptake", out no3_uptake_array);
      no3_uptake = -MathUtility.Sum(no3_uptake_array);  //change from negative number to positive
#elseif ($simulation.management.plantingCropName() == "sorghum")
      MyPaddock.Get("n_total_uptake", out no3_uptake);
#else
      double[] no3_uptake_array;
      MyPaddock.Get("no3_uptake", out no3_uptake_array);
      no3_uptake = -MathUtility.Sum(no3_uptake_array);  //change from negative number to positive
#end
   
      LAIMax = Math.Max(LAIMax, LAI);
      InCropRain = InCropRain + Rain;
      SumEP = SumEP + ep;
      SumNO3Uptake = SumNO3Uptake + no3_uptake;
      SumLeachNO3 = SumLeachNO3 + flow_no3[flow_no3.Length - 1];
   }
   
}
            </text>
         </manager2>         
		</area>
	</simulation>
   #end
</folder>